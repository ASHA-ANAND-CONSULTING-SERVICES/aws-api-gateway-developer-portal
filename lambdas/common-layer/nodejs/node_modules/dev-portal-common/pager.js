const fetchAllItems = async ({ fetchPage, commonParams, selectItems, getNextPageParams }) => {
  let page = await fetchPage(commonParams).promise()
  const items = selectItems(page)
  let nextPageParams = getNextPageParams(page)
  while (nextPageParams) {
    page = await fetchPage({ ...commonParams, ...nextPageParams }).promise()
    items.push(...selectItems(page))
    nextPageParams = getNextPageParams(page)
  }
  return items
}

const fetchUsersInCognitoUserPoolGroup = ({ cognitoClient, userPoolId, groupName }) => fetchAllItems({
  fetchPage: params => cognitoClient.listUsersInGroup(params),
  commonParams: { UserPoolId: userPoolId, GroupName: groupName },
  selectItems: page => page.Users,
  getNextPageParams: page => page.NextToken && { NextToken: page.NextToken },
})

const fetchUsersInCognitoUserPool = ({ cognitoClient, userPoolId }) => fetchAllItems({
  fetchPage: params => cognitoClient.listUsers(params),
  commonParams: { UserPoolId: userPoolId },
  selectItems: page => page.Users,
  getNextPageParams: page => page.NextToken && { NextToken: page.NextToken }
})

const fetchItemsInDynamoDbTable = ({ dynamoDbClient, tableName, extraParams = {} }) => fetchAllItems({
  fetchPage: params => dynamoDbClient.scan(params),
  commonParams: {
    ...extraParams,
    TableName: tableName,
  },
  selectItems: page => page.Items,
  getNextPageParams: page => page.LastEvaluatedKey && { ExclusiveStartKey: page.LastEvaluatedKey },
})

module.exports = {
  fetchAllItems,
  fetchUsersInCognitoUserPoolGroup,
  fetchUsersInCognitoUserPool,
  fetchItemsInDynamoDbTable,
}
